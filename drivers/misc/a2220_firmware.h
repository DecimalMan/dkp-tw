/*
 *
 * Copyright(C) 2012 Samsung Electronics All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */
#if defined(_goghspr_)
#include "a2220_firmware_gogh_spr.h"
#elif defined(CONFIG_MACH_GOGH)
#include "a2220_firmware_gogh.h"
#elif defined(CONFIG_MACH_INFINITE)
#include "a2220_firmware_infinite.h"
#elif defined(CONFIG_MACH_COMANCHE)
#include "a2220_firmware_comanche.h"
#elif defined(CONFIG_MACH_EXPRESS)
#include "a2220_firmware_express.h"
#elif defined(CONFIG_MACH_AEGIS2)
#include "a2220_firmware_aegis2.h"
#elif defined(CONFIG_MACH_JASPER)
#include "a2220_firmware_jasper.h"
#elif defined(_d2tmo_) || defined(_d2ltetmo_) || defined(_d2lteMetroPCS_)
#include "a2220_firmware_t999.h"
#elif defined(CONFIG_MACH_M2_SPR)
#include "a2220_firmware_l710.h"
#else
#include "a2220_firmware_i747.h"
#endif

static unsigned char phonecall_receiver_nson[] = {
        0x80, 0x31, 0x00, 0x00,
};

static unsigned char ft_loopback[] = {
        0x80, 0x31, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x00,
        0x80, 0x1B, 0x01, 0x00,
        0x80, 0x1B, 0x02, 0x00,
        0x80, 0x1B, 0x03, 0x00,
        0x80, 0x1B, 0x04, 0x00,
        0x80, 0x1B, 0x05, 0x00,
        0x80, 0x1B, 0x06, 0x00,
        0x80, 0x1B, 0x07, 0x00,
        0x80, 0x15, 0x00, 0x00,
        0x80, 0x15, 0x01, 0x00,
        0x80, 0x15, 0x02, 0x00,
        0x80, 0x15, 0x03, 0x00,
        0x80, 0x15, 0x04, 0x00,
        0x80, 0x15, 0x05, 0x00,
        0x80, 0x15, 0x06, 0x00,
        0x80, 0x15, 0x07, 0x00,
        0x80, 0x17, 0x00, 0x4B,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x42,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x40,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x0D,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x20,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x1F,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x30,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x31,
        0x80, 0x18, 0x00, 0x00,
};

static unsigned char phonecall_receiver_nson_wb[] = {
        0x80, 0x31, 0x00, 0x02,
};

static unsigned char phonecall_receiver_nsoff[] = {
        0x80, 0x52, 0x00, 0x48,
        0x80, 0x52, 0x00, 0x5C,
        0x80, 0x10, 0x00, 0x01,
};

static unsigned char phonecall_headset[] = {
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x03,
        0x80, 0x26, 0x00, 0x1A,
        0x80, 0x1B, 0x00, 0x00,
        0x80, 0x1B, 0x01, 0x00,
        0x80, 0x15, 0x04, 0x00,
        0x80, 0x15, 0x05, 0x00,
        0x80, 0x1B, 0x02, 0x00,
        0x80, 0x1B, 0x03, 0x00,
        0x80, 0x15, 0x06, 0x00,
        0x80, 0x15, 0x07, 0x00,
        0x80, 0x17, 0x00, 0x4B,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x15,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x03,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x12,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x34,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x04,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x28,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x09,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x0E,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x4C,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x20,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x1F,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x30,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x31,
        0x80, 0x18, 0x00, 0x01,
        0x80, 0x17, 0x00, 0x1A,
        0x80, 0x18, 0x00, 0x00,
};

static unsigned char phonecall_speaker[] = {
        0x80, 0x31, 0x00, 0x01,
};

static unsigned char phonecall_bt[] = {
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x03,
        0x80, 0x26, 0x00, 0x06,
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x00,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char phonecall_tty[] = {
        0x80, 0x26, 0x00, 0x15,
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x00,
        0x80, 0x15, 0x00, 0xFB,
};

static unsigned char INT_MIC_recording_receiver[] = {
        0x80, 0x26, 0x00, 0x07,
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x12,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char EXT_MIC_recording[] = {
        0x80, 0x26, 0x00, 0x15,
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x12,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char INT_MIC_recording_speaker[] = {
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x02,
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x12,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char BACK_MIC_recording[] = {
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x02,
        0x80, 0x26, 0x00, 0x15,
        0x80, 0x1C, 0x00, 0x01,
        0x80, 0x17, 0x00, 0x04,
        0x80, 0x18, 0x00, 0x01,
        0x80, 0x17, 0x00, 0x1A,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x00,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x12,
        0x80, 0x15, 0x00, 0x06,
};

static unsigned char vr_no_ns_receiver[] = {
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x0C,
        0x80, 0x1B, 0x01, 0x0C,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char vr_no_ns_headset[] = {
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x03,
        0x80, 0x26, 0x00, 0x15,
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x12,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char vr_no_ns_speaker[] = {
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x02,
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x0C,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char vr_no_ns_bt[] = {
        0x80, 0x26, 0x00, 0x06,
        0x80, 0x1C, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x00,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char vr_ns_receiver[] = {
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x1C, 0x00, 0x01,
        0x80, 0x17, 0x00, 0x1A,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x04,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x00,
        0x80, 0x18, 0x00, 0x04,
        0x80, 0x1B, 0x00, 0x0C,
        0x80, 0x1B, 0x01, 0x0C,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char vr_ns_headset[] = {
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x03,
        0x80, 0x26, 0x00, 0x15,
        0x80, 0x1C, 0x00, 0x01,
        0x80, 0x17, 0x00, 0x00,
        0x80, 0x18, 0x00, 0x02,
        0x80, 0x17, 0x00, 0x1A,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x04,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x12,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char vr_ns_speaker[] = {
        0x80, 0x17, 0x00, 0x02,
        0x80, 0x18, 0x00, 0x02,
        0x80, 0x1C, 0x00, 0x01,
        0x80, 0x17, 0x00, 0x00,
        0x80, 0x18, 0x00, 0x04,
        0x80, 0x17, 0x00, 0x04,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x1A,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x0C,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char vr_ns_bt[] = {
        0x80, 0x26, 0x00, 0x06,
        0x80, 0x1C, 0x00, 0x01,
        0x80, 0x17, 0x00, 0x00,
        0x80, 0x18, 0x00, 0x02,
        0x80, 0x17, 0x00, 0x04,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x17, 0x00, 0x1A,
        0x80, 0x18, 0x00, 0x00,
        0x80, 0x1B, 0x00, 0x00,
        0x80, 0x15, 0x00, 0x00,
};

static unsigned char suspend_mode[] = {
        0x80, 0x10, 0x00, 0x01
};

static unsigned char pcm_reset[] = {
        0x80, 0x31, 0x00, 0x00
};

static const unsigned char reset_chip[] __maybe_unused = {
        0x80, 0x02, 0x00, 0x00
};

static const unsigned char sync_chip[] __maybe_unused = {
        0x80, 0x00, 0x00, 0x00
};

static const unsigned char boot_chip[] __maybe_unused = {
        0x80, 0x03, 0x00, 0x00
};


struct a2220_config {
        char *data;
        int len;
};
#define CFG(p, n) [A2220_PATH_##p] = { n, sizeof(n) }
static const struct a2220_config a2220_config_params[] = {
        CFG(SUSPEND, suspend_mode),
        CFG(INCALL_RECEIVER_NSON, phonecall_receiver_nson),
        CFG(INCALL_RECEIVER_NSON_WB, phonecall_receiver_nson_wb),
        CFG(INCALL_RECEIVER_NSOFF, phonecall_receiver_nsoff),
        CFG(INCALL_HEADSET, phonecall_headset),
        CFG(INCALL_SPEAKER, phonecall_speaker),
        CFG(INCALL_BT, phonecall_bt),
        CFG(VR_NO_NS_RECEIVER, vr_no_ns_receiver),
        CFG(VR_NO_NS_HEADSET, vr_no_ns_headset),
        CFG(VR_NO_NS_SPEAKER, vr_no_ns_speaker),
        CFG(VR_NO_NS_BT, vr_no_ns_bt),
        CFG(VR_NS_RECEIVER, vr_ns_receiver),
        CFG(VR_NS_HEADSET, vr_ns_headset),
        CFG(VR_NS_SPEAKER, vr_ns_speaker),
        CFG(VR_NS_BT, vr_ns_bt),
        CFG(RECORD_RECEIVER, INT_MIC_recording_receiver),
        CFG(RECORD_HEADSET, EXT_MIC_recording),
        CFG(RECORD_SPEAKER, INT_MIC_recording_speaker),
        CFG(RECORD_BT, phonecall_bt),
        CFG(CAMCORDER, BACK_MIC_recording),
        CFG(INCALL_TTY, phonecall_tty),
        CFG(PCMRESET, pcm_reset),
        CFG(FT_LOOPBACK, ft_loopback),
        CFG(BYPASS_MULTIMEDIA, phonecall_receiver_nsoff),
};
#undef CFG
